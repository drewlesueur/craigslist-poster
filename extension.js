// Generated by CoffeeScript 1.3.3
(function() {
  var __slice = [].slice;

  chrome.browserAction.onClicked.addListener(function(tab) {
    var agree_to_map, callbacker, check_east_valley, check_housing_offered, check_real_estate_by_broker, cl_home, click_continue, create_tab, data_url, details, done_images, download_image, exec, fill_posting, get_listing_details, go_to_posting, ids, listing, nav, new_posting, next_step, steps, upload_image, wait_for_redirect;
    callbacker = function(fn) {
      return function() {
        var args;
        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        return function(cb) {
          return fn.apply(null, __slice.call(args).concat([cb]));
        };
      };
    };
    ids = {};
    exec = function() {
      var args, cb, code, fn, _i;
      fn = arguments[0], args = 3 <= arguments.length ? __slice.call(arguments, 1, _i = arguments.length - 1) : (_i = 1, []), cb = arguments[_i++];
      if (cb == null) {
        cb = function() {};
      }
      code = ";(" + fn.toString() + (").apply(null, " + (JSON.stringify(args)) + ");");
      console.log(code);
      return chrome.tabs.executeScript(null, {
        file: "jquery.js"
      }, function() {
        return chrome.tabs.executeScript(null, {
          code: code,
          runAt: 'document_end'
        }, function(results) {
          return cb(null, results);
        });
      });
    };
    chrome.tabs.onUpdated.addListener(function(tab_id, change_info) {
      if (tab_id in ids) {
        console.log(tab_id, change_info);
        if (change_info.status === "complete") {
          return setTimeout(next_step, _.random(1000, 3000));
        }
      }
    });
    create_tab = function() {
      return chrome.tabs.create({
        url: "about:blank"
      }, function(tab) {
        return next_step();
      });
    };
    nav = function(url, cb) {
      return chrome.tabs.update({
        url: url
      }, function(tab) {
        ids[tab.id] = tab;
        return typeof cb === "function" ? cb(null, tab) : void 0;
      });
    };
    new_posting = function() {};
    cl_home = function() {
      console.log("cl home");
      return nav("http://phoenix.craigslist.org/");
    };
    go_to_posting = function() {
      console.log("cl posting");
      return nav("https://post.craigslist.org/c/phx?lang=en");
    };
    wait_for_redirect = function() {
      return console.log("wait for redirect");
    };
    check_housing_offered = function() {
      console.log("clicking housing offered");
      return exec(function() {
        $('[name="id"][value="ho"]').prop('checked', true);
        return $('form').submit();
      });
    };
    check_real_estate_by_broker = function() {
      console.log("clicking housing offered");
      return exec(function() {
        $('[name="id"][value="144"]').prop('checked', true);
        return $('form').submit();
      });
    };
    check_east_valley = function() {
      return exec(function() {
        $("label:contains(east valley)").find("input").prop('checked', true);
        return $('form').submit();
      });
    };
    fill_posting = function() {
      return exec(function(details) {
        $("span:contains(Price:)").nextAll('input').val(details.ListPrice);
        $("span:contains(# BR:)").nextAll('select').val(details.BedsTotal);
        $("span:contains(Posting Title:)").nextAll('input').val(details.UnparsedAddress);
        $("span:contains(SqFt)").nextAll('input').val(details.BuildingAreaTotal);
        $("span:contains(Posting Description:)").nextAll('textarea').val(details.PublicRemarks);
        $("span:contains(Specific Location:)").nextAll('input').val(details.UnparsedAddress);
        $("span:contains(Street:)").nextAll('input').first().val("" + details.StreetNumber + " " + details.StreetDirPrefix + " " + details.StreetName);
        $("span:contains(City:)").nextAll('input').first().val(details.City);
        $("#region").val(details.StateOrProvince);
        $("#postal_code").val(details.PostalCode);
        return $('form').submit();
      }, details, function() {});
    };
    listing = {};
    details = {};
    get_listing_details = function() {
      return exec(function() {
        return $(".listing").first().find("script").html();
      }, function(err, json) {
        listing = JSON.parse(json[0]);
        details = listing.StandardFields;
        console.log("json is", details);
        return next_step();
      });
    };
    agree_to_map = function() {
      return exec(function() {
        return $(".continue").click();
      });
    };
    data_url = "";
    download_image = function() {
      return chrome.tabs.captureVisibleTab(null, null, function(_data_url) {
        data_url = _data_url;
        return exec(function(data_url, id) {
          $(document.body).append("<a id=\"download-image\" href=\"" + data_url + "\" download=\"" + id + ".jpg\">download image</a>");
          return $("#download-image")[0].click();
        }, data_url, listing.Id, function() {
          return next_step();
        });
      });
    };
    upload_image = function() {
      console.log("upload image");
      return exec(function(data_url) {
        
      function dataURItoBlob(dataURI) {
          var binary = atob(dataURI.split(',')[1]);
          var array = [];
          for(var i = 0; i < binary.length; i++) {
              array.push(binary.charCodeAt(i));
          }
          return new Blob([new Uint8Array(array)], {type: 'image/jpeg'});
      }

      ;

        var b, f, form, r, url;
        b = dataURItoBlob(data_url);
        r = new XMLHttpRequest();
        form = $('form').eq(0);
        url = form.attr("action");
        form.find('[name="file"]').remove();
        f = new FormData(form[0]);
        f.append("file", b);
        r.open("POST", url);
        r.send(f);
        return r.onload = function(e) {
          if (r.status === 200) {
            return chrome.extension.sendMessage({
              method: "next_step"
            });
          }
        };
      }, data_url, function() {});
    };
    chrome.extension.onMessage.addListener(function(req, sender, send_res) {
      console.log("message");
      if (req.method === "next_step") {
        return next_step();
      }
    });
    done_images = function() {
      console.log("done images");
      return exec(function() {
        return $("form").eq(1).submit();
      });
    };
    click_continue = function() {
      return exec(function() {
        return $("button:contains(Continue)").click();
      });
    };
    steps = [get_listing_details, download_image, create_tab, cl_home, go_to_posting, wait_for_redirect, check_housing_offered, check_real_estate_by_broker, check_east_valley, fill_posting, agree_to_map, upload_image, done_images, click_continue];
    next_step = function() {
      var step;
      step = steps.shift();
      return typeof step === "function" ? step() : void 0;
    };
    return next_step();
  });

}).call(this);
